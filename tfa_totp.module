<?php

/**
 * Implements hook_permission().
 */
function tfa_totp_permission() {
  return array(
    'setup own tfa totp' => array(
      'title' => t('Setup own TOTP'),
      'description' => t('Allow users with role to setup TFA TOTP for their account.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function tfa_totp_menu() {
  $items = array();

  $items['user/%user/totp-setup'] = array(
    'title' => 'TOTP Setup',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tfa_totp_setup_form', 1),
    'access arguments' => array('setup own tfa totp'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_tfa_api().
 */
function tfa_totp_tfa_api() {
  return array(
    'tfa_totp' => array(
      'class' => 'TfaTotp',
      'name' => 'TFA TOTP',
    )
  );
}

function tfa_totp_setup_form($form, &$form_state, $account) {

  if (empty($form_state['storage'])) {
    // @todo some info about current config
    $form['app'] = array(
      '#type' => 'submit',
      '#value' => t('Configure TOTP'),
    );
  }
  else {
    $tfaSetup = $form_state['storage']['tfa_setup'];
    $form = $tfaSetup->getForm($form, $form_state);
  }
  // Set account element.
  $form['account'] = array(
    '#type' => 'value',
    '#value' => $account,
  );
  return $form;
}

function tfa_totp_setup_form_validate($form, &$form_state) {
  if (empty($form_state['storage'])) {
    return;
  }
  $tfaSetup = $form_state['storage']['tfa_setup'];
  if (!$tfaSetup->validateForm($form, $form_state)) {
    foreach ($tfaSetup->getErrorMessages() as $element => $message) {
      form_set_error($element, $message);
    }
  }
}

function tfa_totp_setup_form_submit($form, &$form_state) {
  $account = $form['account']['#value'];

  if (isset($form_state['values']['app']) && $form_state['values']['op'] === $form_state['values']['app']) {
    // Create TfaSetup process.
    $tfaSetup = new TfaSetup(array('setup' => 'TfaTotpSetup'), array('uid' => $account->uid));
    // Store TfaSetup in storage.
    $form_state['storage']['tfa_setup'] = $tfaSetup;
    $form_state['rebuild'] = TRUE;
  }
  elseif (!empty($form_state['storage']['tfa_setup'])) {
    $tfaSetup = $form_state['storage']['tfa_setup'];
    if ($tfaSetup->submitForm($form, $form_state)) {
      drupal_set_message('Setup complete');
      $form_state['redirect'] = 'user';
    }
    else {
      // Setup isn't complete so rebuild.
      $form_state['rebuild'] = TRUE;
    }
  }
}
